//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ETCSMessageService.InsertService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsertableTriple", Namespace="http://schemas.datacontract.org/2004/07/RacoonMiddleWare")]
    [System.SerializableAttribute()]
    public partial class InsertableTriple : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ETCSMessageService.InsertService.InsertableNode ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ETCSMessageService.InsertService.InsertableNode PredicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ETCSMessageService.InsertService.InsertableNode SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ETCSMessageService.InsertService.InsertableNode Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ETCSMessageService.InsertService.InsertableNode Predicate {
            get {
                return this.PredicateField;
            }
            set {
                if ((object.ReferenceEquals(this.PredicateField, value) != true)) {
                    this.PredicateField = value;
                    this.RaisePropertyChanged("Predicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ETCSMessageService.InsertService.InsertableNode Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsertableNode", Namespace="http://schemas.datacontract.org/2004/07/RacoonMiddleWare")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ETCSMessageService.InsertService.InsertableTriple[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ETCSMessageService.InsertService.InsertableTriple))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ETCSMessageService.InsertService.SimpleRacoonResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Exception))]
    public partial class InsertableNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleRacoonResponse", Namespace="http://schemas.datacontract.org/2004/07/RacoonMiddleWare")]
    [System.SerializableAttribute()]
    public partial class SimpleRacoonResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AuthorisationOKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AuthorisationOK {
            get {
                return this.AuthorisationOKField;
            }
            set {
                if ((this.AuthorisationOKField.Equals(value) != true)) {
                    this.AuthorisationOKField = value;
                    this.RaisePropertyChanged("AuthorisationOK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InsertService.IInsertTripple")]
    public interface IInsertTripple {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsertTripple/InsertTriple", ReplyAction="http://tempuri.org/IInsertTripple/InsertTripleResponse")]
        ETCSMessageService.InsertService.SimpleRacoonResponse InsertTriple(byte[] token, ETCSMessageService.InsertService.InsertableTriple[] DataToInsert, string graph);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsertTripple/InsertTriple", ReplyAction="http://tempuri.org/IInsertTripple/InsertTripleResponse")]
        System.Threading.Tasks.Task<ETCSMessageService.InsertService.SimpleRacoonResponse> InsertTripleAsync(byte[] token, ETCSMessageService.InsertService.InsertableTriple[] DataToInsert, string graph);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInsertTrippleChannel : ETCSMessageService.InsertService.IInsertTripple, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertTrippleClient : System.ServiceModel.ClientBase<ETCSMessageService.InsertService.IInsertTripple>, ETCSMessageService.InsertService.IInsertTripple {
        
        public InsertTrippleClient() {
        }
        
        public InsertTrippleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InsertTrippleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsertTrippleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsertTrippleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ETCSMessageService.InsertService.SimpleRacoonResponse InsertTriple(byte[] token, ETCSMessageService.InsertService.InsertableTriple[] DataToInsert, string graph) {
            return base.Channel.InsertTriple(token, DataToInsert, graph);
        }
        
        public System.Threading.Tasks.Task<ETCSMessageService.InsertService.SimpleRacoonResponse> InsertTripleAsync(byte[] token, ETCSMessageService.InsertService.InsertableTriple[] DataToInsert, string graph) {
            return base.Channel.InsertTripleAsync(token, DataToInsert, graph);
        }
    }
}
